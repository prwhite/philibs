/////////////////////////////////////////////////////////////////////
//
//    class: ase
//
/////////////////////////////////////////////////////////////////////

#ifndef sceneloaderloaderase_h
#define sceneloaderloaderase_h

/////////////////////////////////////////////////////////////////////

#include "sceneloaderbase.h"

/////////////////////////////////////////////////////////////////////

namespace loader {
  
/////////////////////////////////////////////////////////////////////

class ase :
  public base
{
  public:
    ase();
    virtual ~ase();
//     ase(ase const& rhs);
//     ase& operator=(ase const& rhs);
//     bool operator==(ase const& rhs) const;
    
  protected:
    
  private:
    

  // interface from base
  public:
    virtual scene::node* load ( std::string const& fname );
    
  protected:
    

};

/////////////////////////////////////////////////////////////////////

} // end of namespace loader 

#endif // sceneloaderloaderase_h


