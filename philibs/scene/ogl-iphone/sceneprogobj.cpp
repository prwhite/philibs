/////////////////////////////////////////////////////////////////////
//
//  file: sceneprogobj.cpp
//
/////////////////////////////////////////////////////////////////////

#define PNIDBGDISABLE
#define PNIPSTDLOGDISABLE

#include "pnilog.h"

#include "sceneprogobj.h"

#include "sceneogl.h"
#include <OpenGLES/ES2/glext.h>

#include <iostream>

using namespace std;

/////////////////////////////////////////////////////////////////////

namespace scene {

/////////////////////////////////////////////////////////////////////

progobj::progobj()
{
  init ();
}

progobj::~progobj()
{
  clear ();
}

// progobj::progobj(progobj const& rhs)
// {
//   init ();
// }

// progobj& progobj::operator=(progobj const& rhs)
// {
//   return *this;
// }
// 
// bool progobj::operator==(progobj const& rhs) const
// {
//
//   return false;
// }

/////////////////////////////////////////////////////////////////////

void progobj::bind ( prog const* pData )
{
  // glBind...
}

/////////////////////////////////////////////////////////////////////

void progobj::config ( prog const* pData )
{
  bind ( pData );
  
  if ( ! pData )
    return;
  
CheckGLError

  // config prog pipelines, shaders
}

/////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////

void progobj::init ()
{
  // glGenPipelines...
}

void progobj::clear ()
{
  // glDeletePipelines...
}

/////////////////////////////////////////////////////////////////////
// overrides from attr


/////////////////////////////////////////////////////////////////////


} // end of namespace scene 


