// ///////////////////////////////////////////////////////////////////
//
//  class: factory
//
// ///////////////////////////////////////////////////////////////////

#ifndef scenefactory_h
#define scenefactory_h

// ///////////////////////////////////////////////////////////////////

// ///////////////////////////////////////////////////////////////////

namespace scene {

class framebuffer;
class graphDd;
    
// ///////////////////////////////////////////////////////////////////

class factory 
{
  public:

    static void setFactory ( factory* pFactory ) { sFactory = pFactory; }
    static factory* getInstance () { return sFactory; }

    virtual framebuffer* newFramebuffer () = 0;
    virtual graphDd* newGraphDd () = 0;

  protected:
    
  private:
    static factory* sFactory;

};

// ///////////////////////////////////////////////////////////////////

} // end of namespace scene 

#endif // scenefactory_h
